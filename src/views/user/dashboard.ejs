<%- include('../components/header', { title: 'Dashboard' }) %>
<main class="bg-neutral-900 h-screen w-screen">
<div class="flex h-screen">
    <!-- Sidebar -->

    <style>
    #active-background {
        position: absolute;
        left: 0.5rem;
        width: calc(100% - 1.5rem);
        height: 2.25rem;
        border-radius: 0.5rem;
        transition: transform 0.2s ease-in-out;
        z-index: 0;
     }
     </style>
    <div id="pc-sidebar" class="sidebar transition hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-56 lg:flex-col left-0">
        <div id="pc-sidebar2" class="flex grow flex-col overflow-hidden bg-transparent border border-white/5">
           <nav class="flex flex-1 flex-col">
              <div class="pl-6 pt-4 pb-4 flex">
                 <a href="/" class="flex">
                    <img src="/assets/logo.png" class="h-8 w-8 rounded mr-3 inline-flex">
                    <h1 class="text-white font-medium tracking-tight text-lg">Airlink</h1>
                 </a>
              </div>
                   <!-- User info -->
    <div class="flex items-center space-x-4 py-4 px-4 border-y border-white/5">
     <img class="h-8 w-8 rounded-xl" src="https://api.dicebear.com/9.x/thumbs/svg?seed=<%= user.username %>" alt="User avatar">
     <div>
        <p class="text-1sm font-medium text-white">
          <%= user.username %>
          <span class="text-1xs text-neutral-500"><sup class="mt-1">#<%= String(user.id).padStart(4, '0') %></sup></span>
        </p>
        <p class="text-xs text-neutral-400"><%= user.description %></p>
      </div>
      
   </div>
              <ul role="list" class="flex flex-1 flex-col gap-y-7 mt-2">
                 <li>
                    <ul role="list" class="-mx-2 space-y-1">
                       <div id="active-background" class="absolute left-0 w-full h-8 bg-white/5 rounded-2xl transition-all duration-300 ease-in-out"></div>
                       <li>
                          <a href="/dashboard" class="transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal" searchdata="container instances servers" subterm="jegli:/server/servername">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M5.25 14.25h13.5m-13.5 0a3 3 0 0 1-3-3m3 3a3 3 0 1 0 0 6h13.5a3 3 0 1 0 0-6m-16.5-3a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3m-19.5 0a4.5 4.5 0 0 1 .9-2.7L5.737 5.1a3.375 3.375 0 0 1 2.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 0 1 .9 2.7m0 0a3 3 0 0 1-3 3m0 3h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Zm-3 6h.008v.008h-.008v-.008Zm0-6h.008v.008h-.008v-.008Z" />
                              </svg>                              
                             <span>Servers</span>
                          </a>
                          <a href="/account" searchdata="account profile <%= user.username %>" class="transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                              </svg>
                                                                                       
                             <span>Account</span>
                          </a>
                         
                         <script>
                             document.addEventListener("DOMContentLoaded", function() {
                                 document.querySelectorAll('.svg-icon').forEach(function(span) {
                                     const url = span.getAttribute('data-icon-url');
                         
                                     fetch(url)
                                         .then(response => {
                                             if (!response.ok) {
                                                 throw new Error('Network response was not ok');
                                             } else if (response.status !== 200) {
                                                 throw new Error(`Request failed with status ${response.status}`);
                                             } else if (!response.text().includes('<svg')) {
                                                throw new Error('Response does not contain an SVG');
                                             }
                                             return response.text();
                                         })
                                         .then(svgContent => {
                                             span.innerHTML = svgContent;
                                         })
                                         .catch(error => {
                                             console.error('Error on Loading the SVG:', error);
                                         });
                                 });
                             });
                         </script>
                         
                       </li>
                       <% if (user.admin == true) { %>
                       <p class="pl-8 text-neutral-400 text-xs font-medium pt-6 pb-2"><span>Admin Panel</span></p>
                       <li>
                          <a href="/admin/overview" searchdata="admin overview control" class=" transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                             <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="w-5 mt-0.5 h-5"><rect width="256" height="256" fill="none"/><path d="M224,120v96a8,8,0,0,1-8,8H160a8,8,0,0,1-8-8V164a4,4,0,0,0-4-4H108a4,4,0,0,0-4,4v52a8,8,0,0,1-8,8H40a8,8,0,0,1-8-8V120a16,16,0,0,1,4.69-11.31l80-80a16,16,0,0,1,22.62,0l80,80A16,16,0,0,1,224,120Z"/></svg>
                             <span>Overview</span>
                          </a>
                       </li>
                       <li>
                          <a href="/admin/settings" class=" transition nav-link mt-1 text-neutral-400 px-4 mx-4 group flex gap-x-3 py-1.5 rounded-xl text-sm leading-6 font-normal">
                             <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256" fill="currentColor" class="w-5 mt-0.5 h-5"><rect width="256" height="256" fill="none"/><path d="M237.94,107.21a8,8,0,0,0-3.89-5.4l-29.83-17-.12-33.62a8,8,0,0,0-2.83-6.08,111.91,111.91,0,0,0-36.72-20.67,8,8,0,0,0-6.46.59L128,41.85,97.88,25a8,8,0,0,0-6.47-.6A111.92,111.92,0,0,0,54.73,45.15a8,8,0,0,0-2.83,6.07l-.15,33.65-29.83,17a8,8,0,0,0-3.89,5.4,106.47,106.47,0,0,0,0,41.56,8,8,0,0,0,3.89,5.4l29.83,17,.12,33.63a8,8,0,0,0,2.83,6.08,111.91,111.91,0,0,0,36.72,20.67,8,8,0,0,0,6.46-.59L128,214.15,158.12,231a7.91,7.91,0,0,0,3.9,1,8.09,8.09,0,0,0,2.57-.42,112.1,112.1,0,0,0,36.68-20.73,8,8,0,0,0,2.83-6.07l.15-33.65,29.83-17a8,8,0,0,0,3.89-5.4A106.47,106.47,0,0,0,237.94,107.21ZM128,168a40,40,0,1,1,40-40A40,40,0,0,1,128,168Z"/></svg>
                             <span>Settings</span>
                          </a>
                       </li>
                       <% } %>
                    </ul>
                 </li>
                 <li class="mt-auto border-t border-white/5">
                    <a href="/auth/logout" class="group -mx-2 flex gap-x-3 rounded-xl pl-6 py-4 text-sm font-medium leading-6 text-neutral-500 transition hover:text-white">
                       <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 mt-0.5 h-5">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 9V5.25A2.25 2.25 0 0 1 10.5 3h6a2.25 2.25 0 0 1 2.25 2.25v13.5A2.25 2.25 0 0 1 16.5 21h-6a2.25 2.25 0 0 1-2.25-2.25V15m-3 0-3-3m0 0 3-3m-3 3H15" />
                       </svg>
                       <span>Logout</span>
                    </a>
                 </li>
              </ul>
           </nav>
        </div>
     </div>
</div>
</main>

<%- include('../components/footer') %>


<script>
    document.addEventListener('DOMContentLoaded', function() {
      const navLinks = document.querySelectorAll('.nav-link');
      const activeBackground = document.getElementById('active-background');
      const contentSection = document.getElementById('content');
      let isAnimating = false;
      let currentActiveLink = null;
    
      function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
      }
    
      function setCookie(name, value, days) {
        let expires = '';
        if (days) {
          const date = new Date();
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
          expires = `; expires=${date.toUTCString()}`;
        }
        document.cookie = `${name}=${value || ''}${expires}; path=/`;
      }
    
      function updateActiveBackground(link) {
        const linkRect = link.getBoundingClientRect();
        const navRect = link.closest('ul').getBoundingClientRect();
        const topOffset = linkRect.top - navRect.top + link.closest('ul').scrollTop;
    
        activeBackground.style.height = `${linkRect.height}px`;
        activeBackground.style.transform = `translateY(${topOffset}px)`;
    
        setCookie('lastActiveLink', link.id, 7);
        currentActiveLink = link;
      }
    
      function moveActiveBackgroundInstantly(link) {
        activeBackground.style.transition = 'none';
        updateActiveBackground(link);
        setTimeout(() => {
          activeBackground.style.transition = 'transform 0.3s ease, height 0.3s ease';
        }, 50);
      }
    
      function updateActiveLink(currentPath) {
        let foundActive = false;
        navLinks.forEach((link) => {
          let currentpathx2 = currentPath.replace('instance/', 'instances');
          if (currentpathx2.startsWith(link.getAttribute('href'))) {
            link.classList.add('active');
            if (currentActiveLink) {
              updateActiveBackground(link);
            } else {
              moveActiveBackgroundInstantly(link);
            }
            foundActive = true;
          } else {
            link.classList.remove('active');
          }
        });
    
        if (!foundActive) {
          activeBackground.style.transform = 'translateY(0)';
          activeBackground.style.height = '0px';
        }
      }
    
      const lastActiveLinkId = getCookie('lastActiveLink');
      if (lastActiveLinkId) {
        const lastActiveLink = document.getElementById(lastActiveLinkId);
        if (lastActiveLink) {
          lastActiveLink.classList.add('active');
          moveActiveBackgroundInstantly(lastActiveLink);
        }
      }
    
      function animatePageTransition(href) {
        if (isAnimating) return;
        isAnimating = true;
    
        contentSection.style.opacity = '0';
        contentSection.style.transform = 'translateX(-20px)';
          window.location.href = href;
      }
    
      navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          const href = link.getAttribute('href');
          updateActiveLink(href);
          animatePageTransition(href);
        });
      });
    
      updateActiveLink(window.location.pathname);
    
      window.addEventListener('popstate', () => {
        updateActiveLink(window.location.pathname);
      });
    });


    document.addEventListener('DOMContentLoaded', () => {
       const sidebar = document.querySelector('.sidebar');
       const toggleButton = document.getElementById('sidebar-toggle');
       const colcont = document.getElementById('colcont');

       function setCookie(name, value, days) {
          const date = new Date();
          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
          const expires = "expires=" + date.toUTCString();
          document.cookie = name + "=" + value + ";" + expires + ";path=/";
       }
       function getCookie(name) {
          const nameEQ = name + "=";
          const ca = document.cookie.split(';');
          for(let i = 0; i < ca.length; i++) {
             let c = ca[i];
             while (c.charAt(0) === ' ') c = c.substring(1, c.length);
             if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
          }
          return null;
       }
       const sidebarState = getCookie('sidebar-collapsed');
       if (sidebarState === 'true') {
          sidebar.classList.add('collapsed');
          colcont.classList.add('colcont');
       } else {
          sidebar.classList.remove('collapsed');
          colcont.classList.remove('colcont');
       }
       toggleButton.addEventListener('click', () => {
          sidebar.classList.toggle('collapsed');
          colcont.classList.toggle('colcont');
          const isCollapsed = sidebar.classList.contains('collapsed');
          setCookie('sidebar-collapsed', isCollapsed, 7);
       });

       const mobileToggleButton = document.getElementById('mobile-sidebar-toggle');
       if (mobileToggleButton) {
          mobileToggleButton.addEventListener('click', () => {
             sidebar.classList.toggle('open');
             if (sidebar.classList.contains('open')) {
                mobileToggleButton.classList.add('right-4');
                mobileToggleButton.classList.remove('left-4');
             } else {
                mobileToggleButton.classList.add('left-4');
                mobileToggleButton.classList.remove('right-4');
             }
          });
       }
    });
    </script>    