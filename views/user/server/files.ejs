<%- include('../../components/header', { title: 'Files' }) %>

<%
function getFileIcon(category) {
  const icons = {
    'Configuration Files': `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
      <path fill-rule="evenodd" d="M3 6a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3V6Zm14.25 6a.75.75 0 0 1-.22.53l-2.25 2.25a.75.75 0 1 1-1.06-1.06L15.44 12l-1.72-1.72a.75.75 0 1 1 1.06-1.06l2.25 2.25c.141.14.22.331.22.53Zm-10.28-.53a.75.75 0 0 0 0 1.06l2.25 2.25a.75.75 0 1 0 1.06-1.06L8.56 12l1.72-1.72a.75.75 0 1 0-1.06-1.06l-2.25 2.25Z" clip-rule="evenodd" />
    </svg>    
    `,
    'Documents': `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
      <path fill-rule="evenodd" d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0 0 16.5 9h-1.875a1.875 1.875 0 0 1-1.875-1.875V5.25A3.75 3.75 0 0 0 9 1.5H5.625ZM7.5 15a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 7.5 15Zm.75 2.25a.75.75 0 0 0 0 1.5H12a.75.75 0 0 0 0-1.5H8.25Z" clip-rule="evenodd" />
      <path d="M12.971 1.816A5.23 5.23 0 0 1 14.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 0 1 3.434 1.279 9.768 9.768 0 0 0-6.963-6.963Z" />
    </svg>    
    `,
    'Folder': `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
      <path d="M19.5 21a3 3 0 0 0 3-3v-4.5a3 3 0 0 0-3-3h-15a3 3 0 0 0-3 3V18a3 3 0 0 0 3 3h15ZM1.5 10.146V6a3 3 0 0 1 3-3h5.379a2.25 2.25 0 0 1 1.59.659l2.122 2.121c.14.141.331.22.53.22H19.5a3 3 0 0 1 3 3v1.146A4.483 4.483 0 0 0 19.5 9h-15a4.483 4.483 0 0 0-3 1.146Z" />
    </svg>    
    `,
    'No Category': `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
      <path d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0 0 16.5 9h-1.875a1.875 1.875 0 0 1-1.875-1.875V5.25A3.75 3.75 0 0 0 9 1.5H5.625Z" />
      <path d="M12.971 1.816A5.23 5.23 0 0 1 14.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 0 1 3.434 1.279 9.768 9.768 0 0 0-6.963-6.963Z" />
    </svg>    
    `,
  };

  return icons[category];
}
%>

<main class="h-screen m-auto">
  <div class="flex h-screen">
    <!-- Sidebar -->
    <div class="w-60 h-full">
      <%- include('../../components/template') %>
    </div>

    <!-- Content -->
    <div class="flex-1 p-6 overflow-y-auto pt-16">
      <!-- Page Header -->
      <div class="sm:flex sm:items-center px-8 pt-4">
        <div class="sm:flex-auto">
          <h1 class="text-base font-medium leading-6 text-neutral-800 dark:text-white">
            <%= server.name.charAt(0).toUpperCase() + server.name.slice(1) %>
          </h1>
          <p class="mt-1 tracking-tight text-sm text-neutral-500">
            <%= server.description %>
          </p>
        </div>
      </div>

      <!-- ERROR Message -->
      <div class="rounded-xl bg-red-800/10 px-4 py-6 mt-8 hidden" id="daemonIsDown">
        <div class="flex">
          <svg class="animate-spin mt-2 h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          <div class="ml-5">
            <h3 class="text-sm font-medium text-red-400"><%= req.translations.connectionFailure %></h3>
            <p class="text-sm text-red-400/50"><%= req.translations.connectionFailureText %></p>
          </div>
        </div>
      </div>

      <!-- Server Template -->
      <%- include('../../components/serverTemplate') %>

      <div class="flex-grow px-8 mt-8 -mb-4">
        <h1 class="text-white text-sm">
          <a class="text-neutral-300 hover:text-neutral-200 transition" href="./files">/app/data/</a>
          <% 
              if (req.query.path) { 
                  const parts = req.query.path.split('/');
                  let currentPath = '';
      
                  parts.forEach((part, index) => {
                      currentPath += part;
      
                      if (index < parts.length - 1) {
                          %>
                          <a href="./files?path=<%= currentPath %>" class="text-neutral-300 hover:text-neutral-200 transition"><%= part %></a>/
                          <% 
                          currentPath += '/';
                      } else {
                          %>
                          <span class="text-neutral-100"><%= part %></span>
                          <%
                      }
                  });
              }
          %>
        </h1>
       </div>

      <!-- File Table -->
      <div class="px-8 mt-8">
        <div class="overflow-hidden rounded-lg shadow-md">
          <table class="min-w-full bg-white dark:bg-neutral-800">
            <thead class="bg-neutral-100 dark:bg-neutral-700 text-neutral-800 dark:text-neutral-300">
              <tr>
                <th class="px-6 py-3 text-left">
                  <input type="checkbox" id="selectAll" class="form-checkbox h-5 w-5 text-neutral-500 bg-white/10 border border-white/15 rounded focus:ring-offset-neutral-800 focus:ring-neutral-700 transition focus:border-none file-checkbox" disabled>
                </th>
                <th class="px-6 py-3 text-left text-sm font-semibold uppercase">File Name</th>
                <th class="px-6 py-3 text-left text-sm font-semibold uppercase">Size</th>
                <th class="px-6 py-3 text-left text-sm font-semibold uppercase">&nbsp;</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-neutral-200 dark:divide-neutral-700">
              <% files.forEach(file => { %>
                <tr class="hover:bg-neutral-50 dark:hover:bg-neutral-700/30 cursor-pointer">
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-white border-none">
                    <input type="checkbox" class="form-checkbox h-5 w-5 text-neutral-500 bg-white/5 border border-white/10 rounded focus:ring-offset-neutral-800 focus:ring-neutral-700 transition focus:border-none file-checkbox" data-filename="<%= currentPath && currentPath !== '/' ? currentPath.replace(/^\/+/, '') + '/' + file.name : file.name %>">
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-white border-none">
                    <a href="/server/<%= server.UUID %>/files<%=
                      file.type === 'directory'
                        ? '?path=' + encodeURIComponent(
                            currentPath && currentPath !== '/'
                              ? currentPath.replace(/^\/+/, '') + '/' + file.name
                              : file.name
                          )
                        : '/edit/' + encodeURIComponent(
                            currentPath && currentPath !== '/'
                              ? currentPath.replace(/^\/+/, '') + '/' + file.name
                              : file.name
                          )
                    %>" 
                       class="flex items-center">
                    <span class="mr-4">
                      <%- getFileIcon(
                          file.type === 'directory' ? 'Folder' : file.category || 'No Category'
                        ) %>
                    </span>
                    <%= file.name %>
                    </a>
                  </td>
                  <td class="px-6 py-4 text-sm text-neutral-700 dark:text-neutral-300">
                    <% 
                      const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                      let size = file.size;
                      let unitIndex = 0;
                      while (size >= 1024 && unitIndex < sizes.length - 1) {
                        size /= 1024;
                        unitIndex++;
                      }
                    %>
                    <%= size.toFixed(2) %> <%= sizes[unitIndex] %>
                  </td>
                  <td class="px-6 py-4 text-sm">
                    <button onclick="toggleDropdown(event, '<%= file.name %>')" class="text-neutral-400 hover:text-white transition">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z" />
                      </svg>    
                    </button>
                    <div id="dropdown-<%= file.name %>" class="absolute right-0 mt-2 w-fit mr-20 rounded-xl shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-10 transform opacity-0 scale-95 transition-all duration-200 ease-out pointer-events-none">
                      <div 
                      class="p-2 bg-gray-900 dark:bg-white rounded-lg shadow-md" 
                      role="menu" 
                      aria-orientation="vertical" 
                      aria-labelledby="options-menu"
                    >
                      <button 
                        class="transition-colors duration-200 rounded-lg block px-4 py-1 text-sm font-medium text-red-500 dark:text-red-600 hover:bg-red-50 dark:hover:bg-red-50 text-left" 
                        role="menuitem" onclick="deletefile('<%= file.name %>', '<%= currentPath && currentPath !== '/' ? currentPath.replace(/^\/+/, '') + '/' + file.name : file.name %>')"
                      >
                        Delete
                      </button>
                    </div>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.addEventListener('contextmenu', (event) => {
      event.preventDefault();
      const target = event.target.closest('tr');
      
      if (target) {
        const fileName = target.querySelector('button').getAttribute('onclick').match(/'(.+?)'/)[1];
        showDropdown(event, fileName);
      }
    });

    document.addEventListener('click', () => {
      document.querySelectorAll('[id^="dropdown-"]').forEach((el) => closeDropdown(el));
    });
  });

  function showDropdown(event, fileName) {
    const dropdown = document.getElementById(`dropdown-${fileName}`);
    
    const { clientX: mouseX, clientY: mouseY } = event;
    const dropdownRect = dropdown.getBoundingClientRect();
    const bodyWidth = document.body.clientWidth;

    dropdown.style.left = `${Math.min(mouseX, bodyWidth - dropdownRect.width)}px`;
    dropdown.style.top = `${mouseY}px`;

    openDropdown(dropdown);
  }

  function openDropdown(dropdown) {
    dropdown.classList.remove('opacity-0', 'scale-95', 'pointer-events-none');
    dropdown.classList.add('opacity-100', 'scale-100');
  }

  function closeDropdown(dropdown) {
    dropdown.classList.remove('opacity-100', 'scale-100');
    dropdown.classList.add('opacity-0', 'scale-95', 'pointer-events-none');
  }

  function deletefile(fileName, filePath) {
    fetch('/server/<%= server.UUID %>/files/rm/' + encodeURIComponent(filePath), { method: 'DELETE' }).then(() => {
      location.reload();
    });
  }
</script>

<%- include('../../components/footer') %>